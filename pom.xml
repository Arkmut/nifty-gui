<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.nifty-gui</groupId>
  <artifactId>nifty-main</artifactId>
  <packaging>pom</packaging>
  <version>2.0-SNAPSHOT</version>
  <name>Nifty Main Project</name>
  <description>Nifty GUI is a Java Library that supports the building of interactive user interfaces for games or similar applications. It utilizes OpenGL for rendering and it can be easily integrated into many rendering systems. The configuration of the GUI is stored in xml files with little supporting Java code. In short Nifty helps you to layout stuff, display it in a cool way and interact with it :)</description>
  <modules>
    <module>nifty</module>
    <module>nifty-renderer-opengl</module>
    <module>nifty-renderer-java2d</module>
    <module>nifty-input-lwjgl</module>
    <module>nifty-examples</module>
  </modules>
  <url>https://github.com/nifty-gui/nifty-gui</url>
  <licenses>
    <license>
      <name>The BSD 2-Clause License</name>
      <url>http://www.opensource.org/licenses/bsd-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>void256</id>
      <name>void</name>
      <email>void@lessvoid.com</email>
      <url>https://github.com/void256</url>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Martin Karing</name>
      <email>nitram@illarion.org</email>
      <organization>Illarion e.V.</organization>
      <organizationUrl>http://illarion.org</organizationUrl>
      <timezone>Europe/Berlin</timezone>
      <roles>
        <role>developer</role>
        <role>tester</role>
      </roles>
    </contributor>
  </contributors>
  <properties>
    <!-- The CoreGL version we currently use since this is required in multiple modules -->
    <coregl-utils.version>2.0-SNAPSHOT</coregl-utils.version>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.3</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0-beta-7</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.1</version>
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.4</version>
          <configuration>
            <skipDeploy>true</skipDeploy>
          </configuration>
          <executions>
            <execution>
              <id>stage-for-scm-publish</id>
              <phase>post-site</phase>
              <goals>
                <goal>stage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.2.2</version>
          <configuration>
            <!-- required by gpg-plugin see here: https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven -->
            <mavenExecutorId>forked-path</mavenExecutorId>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-publish-plugin</artifactId>
          <version>1.1</version>
          <configuration>
            <checkoutDirectory>${project.build.directory}/scmpublish</checkoutDirectory>
            <checkinComment>Publishing javadoc for ${project.artifactId}:${project.version}</checkinComment>
            <skipDeletedFiles>true</skipDeletedFiles>
            <scmBranch>gh-pages</scmBranch> <!-- branch with static site -->
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.3.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <scm>
    <connection>scm:git:git://github.com/nifty-gui/nifty-gui.git</connection>
    <developerConnection>scm:git:git@github.com:nifty-gui/nifty-gui.git</developerConnection>
    <url>scm:git:https://github.com/nifty-gui/nifty-gui.git</url>
  </scm>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <site>
      <id>nifty.github</id>
      <url>scm:git:git@github.com:nifty-gui/nifty-gui.git</url>
    </site>
  </distributionManagement>
  <repositories>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </repository>
    <repository>
      <id>nifty-maven-repo.sourceforge.net</id>
      <url>http://nifty-gui.sourceforge.net/nifty-maven-repo</url>
    </repository>
  </repositories>
  <profiles>
    <!-- profile for release signing all artifacts -->
    <!-- remember to call with: mvn release:perform -Darguments=-Dgpg.passphrase=PASSPHRASE -->
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
